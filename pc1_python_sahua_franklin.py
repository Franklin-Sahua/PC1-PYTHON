# -*- coding: utf-8 -*-
"""PC1 PYTHON-SAHUA FRANKLIN

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mfypjn0ITjPMa9fqGaO1_SGaZoou2Ujm

#PC1

## Variables:

Problema 1:
 Escribir un programa que solicite su nombre de usuario por consola y después de que el usuario lo
 introduzca muestre por pantalla la cadena “¡Hola <nombre>!”, donde <nombre> es el nombre que el
 usuario haya introducido.
"""

.# Problema 1
nombre = input("Introduce tu nombre de usuario: ")
print(f"¡Hola {nombre}!")

"""Problema 2:
 En los Estados Unidos, se acostumbra dejar una propina a su mesero después de cenar en un
 restaurante, generalmente una cantidad igual al 15% o más del costo de su comida.
 Escriba un programa que pregunte al usuario cuánto fue su consumo en el restaurante y que
 porcentaje de propina desea dejar al mesero. Su programa debe devolver la cantidad de dinero a
 dejar como propina.
"""

# Problema 2
consumo = float(input("¿Cuánto fue su consumo en el restaurante? "))
porcentaje_propina = float(input("¿Qué porcentaje de propina desea dejar? "))

cantidad_propina = consumo * (porcentaje_propina / 100)

print(f"La cantidad a dejar como propina es: {cantidad_propina:.2f}")

"""Problema 3:
Una juguetería tiene mucho éxito en dos de sus productos: payasos y muñecas. Suele hacer venta
 por correo y la empresa de logística les cobra por peso de cada paquete así que deben calcular el
 peso de los payasos y muñecas que saldrán en cada paquete a demanda. Cada payaso pesa 112 g y
 cada muñeca 75 g. Escribir un programa que lea el número de payasos y muñecas vendidos en el
 último pedido y calcule el peso total del paquete que será enviado.
"""

# Problema 3
peso_payaso = 112
peso_muneca = 75

num_payasos = int(input("Introduce el número de payasos vendidos: "))
num_munecas = int(input("Introduce el número de muñecas vendidas: "))

peso_total = (num_payasos * peso_payaso) + (num_munecas * peso_muneca)

print(f"El peso total del paquete es: {peso_total} g")

"""Problema 4:
Escribir un programa que lea un entero positivo, N, introducido por el usuario y después muestre en
 pantalla la suma de todos los enteros desde 1 hasta N. La suma de los N primeros enteros positivos
 puede ser calculada de la siguiente forma:
"""

# Problema 4
n = int(input("Introduce un entero positivo N: "))

suma = n * (n + 1) // 2

print(f"La suma de los enteros desde 1 hasta {n} es: {suma}")

"""##Condicionales:

Problema 5:
 Escribir un programa que solicite al usuario que ingrese cuántos shows musicales ha visto en el
 último año y almacene ese número en una variable. A continuación, mostrar en pantalla un valor de
 verdad (True o False  - tipo de datos booleanos) que indique si el usuario ha visto más de 3 shows.
"""

# Problema 5
shows_vistos = int(input("¿Cuántos shows musicales has visto en el último año? "))

ha_visto_mas_de_3 = shows_vistos > 3

print(f"¿Ha visto más de 3 shows? {ha_visto_mas_de_3}")

""" Problema 6:
 Escribir un programa para una empresa que tiene salas de juegos para todas las edades y quiere
 calcular de forma automática el precio que debe cobrar a sus clientes por entrar. El programa debe
 preguntar al usuario la edad del cliente y mostrar el precio de la entrada. Si el cliente es menor de 4
 años puede entrar gratis, si tiene entre 4 y 18 años debe pagar $5 y si es mayor de 18 años, S10.
"""

# Problema 6
edad = int(input("Introduce la edad del cliente: "))

if edad < 4:
    precio = 0
elif 4 <= edad <= 18:
    precio = 5
else:
    precio = 10

print(f"El precio de la entrada es: ${precio}")

""" Problema 7:
 Realiza un programa que lea dos números por teclado y permite elegir entre 3 opciones en un menú:----
 Mostrar una suma de los dos números
 Mostrar una resta de los dos números (el primero menos el segundo)
 Mostrar una multiplicación de los dos números
 En caso de introducir una opción inválida, el programa informará de que no es correcta.
"""

# Problema 7
num1 = float(input("Introduce el primer número: "))
num2 = float(input("Introduce el segundo número: "))

print("\nMenú:")
print("1. Suma")
print("2. Resta")
print("3. Multiplicación")

opcion = input("Elige una opción (1, 2 o 3): ")

if opcion == '1':
    resultado = num1 + num2
    print(f"La suma es: {resultado}")
elif opcion == '2':
    resultado = num1 - num2
    print(f"La resta es: {resultado}")
elif opcion == '3':
    resultado = num1 * num2
    print(f"La multiplicación es: {resultado}")
else:
    print("Opción inválida.")

""" Problema 8:
 Supongamos que estás en un país donde se acostumbra desayunar entre las 7:00 y las 8:00, almorzar
 entre las 12:00 y las 13:00 y cenar entre las 18:00 y las 19:00.
 Implemente un programa que solicite al usuario una hora y le indique si es la hora del desayuno, la
 hora del almuerzo o la hora de la cena. Si no es hora de comer, no envíes nada.
 Suponga que la entrada del usuario se formatea en formato de 24 horas como #:## o ##:##. Y
 suponga que el rango de tiempo de cada comida es inclusivo. Por ejemplo, ya sean las 7:00, las 7:01,
 las 7:59 o las 8:00, o en cualquier momento intermedio, es hora de desayunar.
"""

# Problema 8
hora_str = input("Introduce la hora en formato #:## o ##:##: ")

horas, minutos = map(int, hora_str.split(':'))
hora_decimal = horas + minutos / 60

if 7 <= hora_decimal <= 8:
    print("Es hora del desayuno.")
elif 12 <= hora_decimal <= 13:
    print("Es hora del almuerzo.")
elif 18 <= hora_decimal <= 19:
    print("Es hora de la cena.")

"""##Colecciones de Datos:

Problema 9:
 Escriba un programa que, dada una lista, devuelve una nueva lista cuyo contenido sea igual a la
 original pero invertida. Así, dada la lista ['Di', 'buen', 'día', 'a', 'papa'], deberá devolver ['papa', 'a',
 'día', 'buen', 'Di'].
"""

# Problema 9

lista = ['Di', 'buen', 'día', 'a', 'papa']


lista_invertida = lista[::-1]

print("Lista invertida:", lista_invertida)

"""Problema 10: Escriba un programa para imprimir una lista específica después de eliminar los elementos que se
 encuentran en la posición 0, 4 y 5.
 lista de muestra: ['Rojo', 'Verde', 'Blanco', 'Negro', 'Rosa', 'Amarillo']
 Resultado esperado: ['Verde', 'Blanco', 'Negro']
"""

# Problema 10
lista = ['Rojo', 'Verde', 'Blanco', 'Negro', 'Rosa', 'Amarillo']


lista_filtrada = [elemento for i, elemento in enumerate(lista) if i not in [0, 4, 5]]

print("Lista filtrada:", lista_filtrada)

"""Problema 11:
 Escriba un programa Python que se encargue de eliminar los elementos duplicados de la siguiente
 lista. Su programa debe retornar otra lista sin los duplicados.
 Lista original: [1, 1, 2, 3, 4, 4, 5, 1]
 Lista procesada: [1, 2, 3, 4,, 5]
"""

# Problema 11
lista_original = [1, 1, 2, 3, 4, 4, 5, 1]


lista_sin_duplicados = []
for elemento in lista_original:
    if elemento not in lista_sin_duplicados:
        lista_sin_duplicados.append(elemento)

print("Lista sin duplicados:", lista_sin_duplicados)

"""Problema 12:
 La mayoría de los archivos tienen extensiones de archivo, el cual es un sufijo que comienza con un
 punto (.) al final de su nombre. Por ejemplo, los nombres de archivo para GIF terminan en .gif y los
 nombres de archivo para JPEG terminan en .jpg o .jpeg. Mientras que en los sistemas operativos
 como Windows, el tipo de archivo le sirve al computador abrir el archivo en el formato apropiado, en
 la web esto es distinto.  Los navegadores web, por el contrario, se basan en tipos de medios,
 anteriormente conocidos como tipos MIME, para determinar cómo mostrar los archivos que viven en
 la web. Implemente un programa que solicite al usuario el nombre de un archivo y luego genere el tipo de
 archivo MIME correspondiente. Si el nombre del archivo termina en cualquiera de estos sufijos (sin
 importar el uso de mayúsculas y minúsculas) :------

.gif

 .jpg

 .jpeg

 .png

 .pdf

 .txt

 .zip

 Si el nombre del archivo termina con algún otro sufijo que no se encuentra en la lista o no tiene
 ningún sufijo, en su lugar su programa deberá devolver application/octet-stream.
"""

# Problema 12
nombre_archivo = input("Introduce el nombre del archivo: ").lower()

if nombre_archivo.endswith(".gif"):
    mime_type = "image/gif"
elif nombre_archivo.endswith(".jpg") or nombre_archivo.endswith(".jpeg"):
    mime_type = "image/jpeg"
elif nombre_archivo.endswith(".png"):
    mime_type = "image/png"
elif nombre_archivo.endswith(".pdf"):
    mime_type = "application/pdf"
elif nombre_archivo.endswith(".txt"):
    mime_type = "text/plain"
elif nombre_archivo.endswith(".zip"):
    mime_type = "application/zip"
else:
    mime_type = "application/octet-stream"

print(f"El tipo MIME del archivo es: {mime_type}")